// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model batchNo{
  id Int @id @default(autoincrement())
  product product @relation(fields: [productId], references: [productId])
  productId String @db.VarChar(20)
  batchNo String @db.VarChar(255) @unique
  ManufacturerBNo String @db.VarChar(255)
  mfDate DateTime 
  exDate DateTime
  buyingPrice Float
  sellingPrice Float
  status String @db.VarChar(10) @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  stocks Stock[]
  grns GRN[]
}
model GRN{
  id Int @id @default(autoincrement())
  grnID String @db.VarChar(20) @unique

  product product @relation(fields: [productId], references: [productId])
  productId String @db.VarChar(20)

  warehouse warehouse @relation(fields: [warehouseID], references: [warehouseID])
  warehouseID String @db.VarChar(20)

  supplier supplier @relation(fields: [supplierID], references: [supplierId])
  supplierID String @db.VarChar(20)

  batch batchNo @relation(fields: [batchNo], references: [batchNo])
  batchNo String @db.VarChar(255)

  quantity Int
  totalBuyingPrice Float

  status String @db.VarChar(10) @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Stock{
  id Int @id @default(autoincrement())
  product product @relation(fields: [productId], references: [productId])
  productId String @db.VarChar(20)
  warehouse warehouse @relation(fields: [warehouseID], references: [warehouseID])
  warehouseID String @db.VarChar(20)
  batch batchNo @relation(fields: [batchNo], references: [batchNo])
  batchNo String @db.VarChar(255) @unique
  quantity Int
  buyingPrice Float
  sellingPrice Float
  status String @db.VarChar(10) @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model product{
  id Int @id @default(autoincrement())
  productId String @db.VarChar(20) @unique
  barcode String @db.VarChar(50) @unique
  productName String @db.VarChar(150)
  createdAt DateTime @default(now())
  status String @db.VarChar(10) @default("active")
  updatedAt DateTime @updatedAt
  batches batchNo[]
  grns GRN[]
  stocks Stock[]
}

model warehouse{
  id Int @id @default(autoincrement())
  warehouseID String @db.VarChar(20) @unique
  location String @db.VarChar(50)
  createdAt DateTime @default(now())
  status String @db.VarChar(10) @default("active")
  updatedAt DateTime @updatedAt
  grns GRN[]
  stocks Stock[]
  
}

model customer {
  id Int @id @default(autoincrement())
  customer_id String @db.VarChar(20) @unique
  name String @db.VarChar(50)
  email String @db.VarChar(120) 
  mobile String @db.VarChar(14)
  loyalty_points Int @db.Int @default(0)
  status String @db.VarChar(10) @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
}

model supplier{
  id Int @id @default(autoincrement())
  supplierId String @db.VarChar(20) @unique
  supplierName String @db.VarChar(150) 
  supplierAddress String @db.VarChar(150)
  supplierContactNumber String @db.VarChar(20)
  outstandingAmount Float @db.Float @default(0)
  status String @db.VarChar(10) @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([supplierId, supplierName])
  payments supplier_payments[]
  grns GRN[]
}

model bank{
  id Int @id @default(autoincrement())
  accountNumber String @db.VarChar(30) @unique
  accountName String @db.VarChar(50) 
  bankName String @db.VarChar(50) 
  branchName String @db.VarChar(50) 
}

model supplier_payments {
  id Int @id @default(autoincrement())
  paymentId String @db.VarChar(10) @unique 
  supplier supplier @relation( fields: [supplierId , supplierName] , references: [supplierId , supplierName])
  supplierId String @db.VarChar(20)
  supplierName String @db.VarChar(30)
  paymentDescription String @db.VarChar(50) 
  paymentAmount Float
}